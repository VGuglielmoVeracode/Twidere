name: Development Branch Workflow

on:
  push:
    branches: [ development ]
  pull_request:
    branches: [ development ]

jobs:
  pipeline-scan:
    name: Veracode Pipeline Scan
    runs-on: ubuntu-latest
    steps:
      - name: create dir prior
        run: |
          mkdir dls
      - name: Download pipeline code
        working-directory: ./dls/
        run: |
          curl https://downloads.veracode.com/securityscan/pipeline-scan-LATEST.zip -o veracode.zip
          unzip veracode.zip
      - name: Run Pipeline Scanner
        continue-on-error: true
        run: |
          java -jar ./dls/pipeline-scan.jar --veracode_api_id "${{secrets.VERACODE_API_ID}}" --veracode_api_key "${{secrets.VERACODE_API_KEY}}" --file "result.zip" -jo true -so true --project_url https://www.github.com/$GITHUB_REPOSITORY -p $GITHUB_REPOSITORY -r $GITHUB_REF
      
  software-composition-analysis:
    name: Veracode SCA Agent-Based Scan
    runs-on: ubuntu-latest
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Check out repo 
        uses: actions/checkout@v2

      # run quick scan on the project
      - name: SCA Scan
        env: 
          SRCCLR_API_TOKEN: ${{ secrets.SRCCLR_API_TOKEN }}
        run: curl -sSL https://download.sourceclear.com/ci.sh | sh -s scan --quick

# Controls when the workflow will run
# on:
#   # Triggers the workflow on push where package-lock.json modifies or pull request events
#   push:
#     paths:
#       - 'package-lock.json'
#   pull_request:
  
#   # Allows you to run this workflow manually from the Actions tab
#   workflow_dispatch:

# # A workflow run is made up of one or more jobs that can run sequentially or in parallel
# jobs:
#   # The workflow consist of a single job to quickly scan dependencies
#   SCA_Scan:
#     # The type of runner that the job will run on
#     runs-on: ubuntu-latest

#     steps:
#       # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
#       - name: Check out repo 
#         uses: actions/checkout@v2

#       # run quick scan on the project
#       - name: SCA Scan
#         env: 
#           SRCCLR_API_TOKEN: ${{ secrets.SRCCLR_API_TOKEN }}
#         run: curl -sSL https://download.sourceclear.com/ci.sh | sh -s scan --quick